@section CustomMeta
{
    <meta name="google-signin-scope" content="profile email">
    <meta name="google-signin-client_id" content="@ViewBag.GId" )>
    <script src="https://apis.google.com/js/platform.js" async defer></script>
}


<div class="jumbotron">
    <h1>Merchant Api (Beta)</h1>
    <p class="lead">We're building our Merchant API</p>
    <p>@Html.ActionLink("Learn More", "Index", "Help", new { area = "" }, null)</p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
            a broad range of clients, including browsers and mobile devices. ASP.NET Web API
            is an ideal platform for building RESTful applications on the .NET Framework.
        </p>
        <p>
            <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p>
            <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Basic Google Sign-in</h2>
        <div class="g-signin2" data-onsuccess="onSignIn" data-theme="dark"></div>
        <h4>Google Sign Out</h4>
        <button class="btn btn-default" onclick="disconnect()">Sign out</button>
    </div>
</div>
@section scripts
{
    <script>
        function onSignIn(googleUser) {
            // Useful data for your client-side scripts:
            var profile = googleUser.getBasicProfile();
            console.log("ID: " + profile.getId()); // Don't send this directly to your server!
            console.log("Name: " + profile.getName());
            console.log("Image URL: " + profile.getImageUrl());
            console.log("Email: " + profile.getEmail());

            // The ID token you need to pass to your backend:
            var id_token = googleUser.getAuthResponse().id_token;
            console.log("ID Token: " + id_token);


            $.ajax({
                type: "POST",
                url: "@Url.Action("BasicGoogleVerify")",
                data: JSON.stringify({ "token": id_token, "gid": profile.getId() }),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            }).done(function (data) {
                console.log(data);
            });

        };

        function disconnect() {
            var auth2 = gapi.auth2.getAuthInstance();
            if (auth2) {
                auth2.signOut();
            }
        }
    </script>

}
